# =====================================================
# SCRIPT DE PR√âPARATION DU D√âPLOIEMENT ECOSYSTIA
# VPS HOSTINGER - Windows PowerShell
# =====================================================

Write-Host "üöÄ PR√âPARATION DU D√âPLOIEMENT ECOSYSTIA SUR VPS HOSTINGER" -ForegroundColor Green
Write-Host "=========================================================" -ForegroundColor Green

# Variables de configuration
$DOMAIN_NAME = "ecosystia.impulcia-afrique.com"
$APP_NAME = "ecosystia"
$TEMP_DIR = "C:\temp\ecosystia-deploy"
$DEPLOY_ARCHIVE = "ecosystia-deploy-$(Get-Date -Format 'yyyyMMdd_HHmmss').zip"

Write-Host "üìã Configuration du d√©ploiement:" -ForegroundColor Blue
Write-Host "   - Domaine: $DOMAIN_NAME" -ForegroundColor Gray
Write-Host "   - Application: $APP_NAME" -ForegroundColor Gray
Write-Host "   - R√©pertoire temporaire: $TEMP_DIR" -ForegroundColor Gray
Write-Host ""

# =====================================================
# 1. V√âRIFICATION DES PR√âREQUIS
# =====================================================

Write-Host "üîç V√©rification des pr√©requis..." -ForegroundColor Yellow

# V√©rifier si nous sommes dans le bon r√©pertoire
if (-not (Test-Path "package.json")) {
    Write-Host "‚ùå Erreur: Ce script doit √™tre ex√©cut√© depuis le r√©pertoire racine d'EcosystIA" -ForegroundColor Red
    exit 1
}

# V√©rifier si Node.js est install√©
try {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js version: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js n'est pas install√© ou pas dans le PATH" -ForegroundColor Red
    exit 1
}

# V√©rifier si npm est install√©
try {
    $npmVersion = npm --version
    Write-Host "‚úÖ npm version: $npmVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå npm n'est pas install√© ou pas dans le PATH" -ForegroundColor Red
    exit 1
}

# =====================================================
# 2. INSTALLATION DES D√âPENDANCES
# =====================================================

Write-Host "üì¶ Installation des d√©pendances..." -ForegroundColor Yellow

if (-not (Test-Path "node_modules")) {
    Write-Host "   Installation des d√©pendances..." -ForegroundColor Blue
    npm install
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Erreur lors de l'installation des d√©pendances" -ForegroundColor Red
        exit 1
    }
} else {
    Write-Host "   ‚úÖ D√©pendances d√©j√† install√©es" -ForegroundColor Green
}

# =====================================================
# 3. CONSTRUCTION DE L'APPLICATION
# =====================================================

Write-Host "üî® Construction de l'application..." -ForegroundColor Yellow

Write-Host "   Construction de l'application..." -ForegroundColor Blue
npm run build

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreur lors de la construction de l'application" -ForegroundColor Red
    exit 1
}

Write-Host "   ‚úÖ Application construite avec succ√®s" -ForegroundColor Green

# =====================================================
# 4. PR√âPARATION DU R√âPERTOIRE TEMPORAIRE
# =====================================================

Write-Host "üìÅ Pr√©paration du r√©pertoire temporaire..." -ForegroundColor Yellow

# Cr√©er le r√©pertoire temporaire
if (Test-Path $TEMP_DIR) {
    Remove-Item -Path $TEMP_DIR -Recurse -Force
}
New-Item -ItemType Directory -Path $TEMP_DIR -Force | Out-Null

# =====================================================
# 5. COPIE DES FICHIERS
# =====================================================

Write-Host "üìã Copie des fichiers..." -ForegroundColor Yellow

# Copier les fichiers de l'application construite
Copy-Item -Path "dist\*" -Destination $TEMP_DIR -Recurse -Force

# Copier les fichiers de configuration serveur
Copy-Item -Path "deploy\server.js" -Destination $TEMP_DIR -Force
Copy-Item -Path "deploy\ecosystem.config.js" -Destination $TEMP_DIR -Force
Copy-Item -Path "deploy\package.json" -Destination $TEMP_DIR -Force
Copy-Item -Path "deploy\nginx-ecosystia.conf" -Destination $TEMP_DIR -Force

# =====================================================
# 6. CR√âATION DU FICHIER .ENV
# =====================================================

Write-Host "‚öôÔ∏è  Cr√©ation du fichier .env de production..." -ForegroundColor Yellow

$envContent = @"
# Configuration de production EcosystIA
NODE_ENV=production
PORT=3000

# Supabase (√† configurer avec vos vraies cl√©s)
VITE_SUPABASE_URL=https://your-project.supabase.co
VITE_SUPABASE_ANON_KEY=your-anon-key

# Configuration du domaine
DOMAIN_NAME=$DOMAIN_NAME
"@

Set-Content -Path "$TEMP_DIR\.env" -Value $envContent

# =====================================================
# 7. CR√âATION DU SCRIPT DE D√âPLOIEMENT SERVEUR
# =====================================================

Write-Host "üìú Cr√©ation du script de d√©ploiement serveur..." -ForegroundColor Yellow

$deployScriptContent = @'
#!/bin/bash

# Script de d√©ploiement √† ex√©cuter sur le serveur
APP_DIR="/var/www/ecosystia"
APP_USER="ecosystia"

echo "üöÄ D√©ploiement d'EcosystIA sur le serveur..."

# Arr√™ter PM2 si l'application est en cours d'ex√©cution
pm2 stop ecosystia 2>/dev/null || true

# Sauvegarder l'ancienne version
if [ -d "$APP_DIR/dist" ]; then
    echo "üì¶ Sauvegarde de l'ancienne version..."
    sudo mv $APP_DIR/dist $APP_DIR/dist.backup.$(date +%Y%m%d_%H%M%S)
fi

# Cr√©er le r√©pertoire dist
sudo mkdir -p $APP_DIR/dist

# Copier les nouveaux fichiers
echo "üìÅ Copie des nouveaux fichiers..."
sudo cp -r * $APP_DIR/

# Changer les permissions
sudo chown -R $APP_USER:www-data $APP_DIR
sudo chmod -R 755 $APP_DIR

# Installer les d√©pendances du serveur
echo "üì¶ Installation des d√©pendances serveur..."
cd $APP_DIR
sudo -u $APP_USER npm install

# D√©marrer l'application avec PM2
echo "üöÄ D√©marrage de l'application..."
sudo -u $APP_USER pm2 start ecosystem.config.js

# Sauvegarder la configuration PM2
sudo -u $APP_USER pm2 save
sudo -u $APP_USER pm2 startup

echo "‚úÖ D√©ploiement termin√© !"
echo "üåê Application accessible sur: http://$(curl -s ifconfig.me)"
'@

Set-Content -Path "$TEMP_DIR\deploy.sh" -Value $deployScriptContent

# =====================================================
# 8. CREATION DE L'ARCHIVE
# =====================================================

Write-Host "üì¶ Cr√©ation de l'archive de d√©ploiement..." -ForegroundColor Yellow

# Cr√©er l'archive ZIP
Compress-Archive -Path "$TEMP_DIR\*" -DestinationPath "C:\temp\$DEPLOY_ARCHIVE" -Force

if (Test-Path "C:\temp\$DEPLOY_ARCHIVE") {
    Write-Host "   ‚úÖ Archive cr√©√©e: C:\temp\$DEPLOY_ARCHIVE" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå Erreur lors de la cr√©ation de l'archive" -ForegroundColor Red
    exit 1
}

# =====================================================
# 9. NETTOYAGE
# =====================================================

Write-Host "üßπ Nettoyage..." -ForegroundColor Yellow
Remove-Item -Path $TEMP_DIR -Recurse -Force

# =====================================================
# 10. INSTRUCTIONS FINALES
# =====================================================

Write-Host ""
Write-Host "üéâ PR√âPARATION DU D√âPLOIEMENT TERMIN√âE !" -ForegroundColor Green
Write-Host "=========================================" -ForegroundColor Green
Write-Host ""
Write-Host "üìã Instructions de d√©ploiement:" -ForegroundColor Blue
Write-Host ""
Write-Host "1. R√©initialiser le serveur VPS:" -ForegroundColor Yellow
Write-Host "   wget https://raw.githubusercontent.com/your-repo/ecosystia/main/deploy/vps-setup.sh" -ForegroundColor Gray
Write-Host "   chmod +x vps-setup.sh" -ForegroundColor Gray
Write-Host "   sudo ./vps-setup.sh" -ForegroundColor Gray
Write-Host ""
Write-Host "2. Transf√©rer l'archive sur votre serveur:" -ForegroundColor Yellow
Write-Host "   scp C:\temp\$DEPLOY_ARCHIVE root@YOUR_SERVER_IP:/tmp/" -ForegroundColor Gray
Write-Host ""
Write-Host "3. Se connecter au serveur et d√©ployer:" -ForegroundColor Yellow
Write-Host "   ssh root@YOUR_SERVER_IP" -ForegroundColor Gray
Write-Host "   cd /tmp" -ForegroundColor Gray
Write-Host "   unzip $DEPLOY_ARCHIVE" -ForegroundColor Gray
Write-Host "   chmod +x deploy.sh" -ForegroundColor Gray
Write-Host "   ./deploy.sh" -ForegroundColor Gray
Write-Host ""
Write-Host "4. Configurer SSL (optionnel):" -ForegroundColor Yellow
Write-Host "   certbot --nginx -d $DOMAIN_NAME" -ForegroundColor Gray
Write-Host ""
Write-Host "üìÅ Fichiers pr√©par√©s:" -ForegroundColor Blue
Write-Host "   ‚úÖ Application construite (dist/)" -ForegroundColor Green
Write-Host "   ‚úÖ Serveur Node.js (server.js)" -ForegroundColor Green
Write-Host "   ‚úÖ Configuration PM2 (ecosystem.config.js)" -ForegroundColor Green
Write-Host "   ‚úÖ Configuration Nginx (nginx-ecosystia.conf)" -ForegroundColor Green
Write-Host "   ‚úÖ Package.json serveur (package.json)" -ForegroundColor Green
Write-Host "   ‚úÖ Script de d√©ploiement (deploy.sh)" -ForegroundColor Green
Write-Host "   ‚úÖ Archive compl√®te ($DEPLOY_ARCHIVE)" -ForegroundColor Green
Write-Host ""
Write-Host "üöÄ Pr√™t pour le d√©ploiement sur VPS Hostinger !" -ForegroundColor Green
Write-Host ""
Write-Host "üìñ Consultez deploy/README-DEPLOYMENT.md pour plus de d√©tails" -ForegroundColor Blue
