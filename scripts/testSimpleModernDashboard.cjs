const fs = require('fs');
const path = require('path');

console.log('üéØ TEST DU DASHBOARD SIMPLE ET MODERNE');
console.log('======================================\n');

const componentsPath = path.join(__dirname, '../components');
const commonPath = path.join(componentsPath, 'common');

console.log('üìä ANALYSE DU DASHBOARD SIMPLE');
console.log('==============================\n');

// V√©rifier que SimpleModernDashboard existe
const simpleDashboardPath = path.join(commonPath, 'SimpleModernDashboard.tsx');
if (fs.existsSync(simpleDashboardPath)) {
  console.log('‚úÖ SimpleModernDashboard.tsx: Pr√©sent');
  
  const content = fs.readFileSync(simpleDashboardPath, 'utf8');
  
  // V√©rifications de base
  const hasReactImport = content.includes('import React');
  const hasExport = content.includes('export default');
  const hasInterface = content.includes('interface SimpleModernDashboardProps');
  const hasSetView = content.includes('setView');
  const hasStats = content.includes('stats: any');
  
  console.log(`   ‚úÖ Import React: ${hasReactImport ? 'Oui' : 'Non'}`);
  console.log(`   ‚úÖ Export default: ${hasExport ? 'Oui' : 'Non'}`);
  console.log(`   ‚úÖ Interface d√©finie: ${hasInterface ? 'Oui' : 'Non'}`);
  console.log(`   ‚úÖ setView int√©gr√©: ${hasSetView ? 'Oui' : 'Non'}`);
  console.log(`   ‚úÖ Props stats: ${hasStats ? 'Oui' : 'Non'}`);
  
  // V√©rifications sp√©cifiques
  const hasModules = content.includes('modules:');
  const hasQuickActions = content.includes('quickActions:');
  const hasResponsive = content.includes('grid-cols-1 md:grid-cols-2');
  const hasModernDesign = content.includes('rounded-2xl') && content.includes('shadow-sm');
  const hasStatsDisplay = content.includes('stats.activeProjects');
  
  console.log(`   ‚úÖ Modules d√©finis: ${hasModules ? 'Oui' : 'Non'}`);
  console.log(`   ‚úÖ Actions rapides: ${hasQuickActions ? 'Oui' : 'Non'}`);
  console.log(`   ‚úÖ Design responsive: ${hasResponsive ? 'Oui' : 'Non'}`);
  console.log(`   ‚úÖ Design moderne: ${hasModernDesign ? 'Oui' : 'Non'}`);
  console.log(`   ‚úÖ Affichage stats: ${hasStatsDisplay ? 'Oui' : 'Non'}`);
  
  // V√©rifier les modules existants utilis√©s
  const existingModules = ['projects', 'courses', 'jobs', 'crm', 'finance', 'goals', 'analytics', 'settings'];
  const usedModules = existingModules.filter(module => content.includes(`'${module}'`));
  console.log(`   ‚úÖ Modules existants utilis√©s: ${usedModules.length}/${existingModules.length} (${usedModules.join(', ')})`);
  
  console.log(`   ‚úÖ Status: VALIDE\n`);
} else {
  console.log('‚ùå SimpleModernDashboard.tsx: MANQUANT\n');
}

// V√©rifier l'int√©gration dans Dashboard.tsx
const dashboardPath = path.join(componentsPath, 'Dashboard.tsx');
if (fs.existsSync(dashboardPath)) {
  console.log('üîß V√âRIFICATION DE L\'INT√âGRATION DASHBOARD');
  console.log('===========================================\n');
  
  const dashboardContent = fs.readFileSync(dashboardPath, 'utf8');
  
  const isImported = dashboardContent.includes('import SimpleModernDashboard');
  const isUsed = dashboardContent.includes('<SimpleModernDashboard');
  const isSimple = !dashboardContent.includes('QuickAccessModules') && 
                   !dashboardContent.includes('ModernQuickActions') &&
                   !dashboardContent.includes('ModernTabNavigation') &&
                   !dashboardContent.includes('ModernWidgets') &&
                   !dashboardContent.includes('QuickSearch') &&
                   !dashboardContent.includes('ModernNotifications');
  
  console.log(`üîç SimpleModernDashboard:`);
  console.log(`   Import: ${isImported ? '‚úÖ' : '‚ùå'}`);
  console.log(`   Utilis√©: ${isUsed ? '‚úÖ' : '‚ùå'}`);
  console.log(`   Dashboard simplifi√©: ${isSimple ? '‚úÖ' : '‚ùå'}`);
  console.log(`   Status: ${isImported && isUsed && isSimple ? 'INT√âGR√â' : 'MANQUANT'}\n`);
  
  // V√©rifier que les anciens composants complexes sont supprim√©s
  const oldComponents = [
    'QuickAccessModules',
    'ModernQuickActions', 
    'ModernTabNavigation',
    'ModernWidgets',
    'QuickSearch',
    'ModernNotifications'
  ];
  
  const removedComponents = oldComponents.filter(comp => !dashboardContent.includes(comp));
  console.log(`üßπ Composants complexes supprim√©s: ${removedComponents.length}/${oldComponents.length}`);
  removedComponents.forEach(comp => console.log(`   ‚úÖ ${comp} supprim√©`));
  
  if (removedComponents.length < oldComponents.length) {
    const remaining = oldComponents.filter(comp => dashboardContent.includes(comp));
    console.log(`   ‚ö†Ô∏è  Restants: ${remaining.join(', ')}`);
  }
  
} else {
  console.log('‚ùå Dashboard.tsx non trouv√©\n');
}

// V√©rifier que les fichiers complexes sont supprim√©s
console.log('üóëÔ∏è  V√âRIFICATION DES FICHIERS SUPPRIM√âS');
console.log('=======================================\n');

const complexComponents = [
  'QuickAccessModules.tsx',
  'ModernQuickActions.tsx',
  'ModernTabNavigation.tsx', 
  'ModernWidgets.tsx',
  'QuickSearch.tsx',
  'ModernNotifications.tsx'
];

let deletedCount = 0;
complexComponents.forEach(component => {
  const filePath = path.join(commonPath, component);
  if (!fs.existsSync(filePath)) {
    console.log(`‚úÖ ${component}: Supprim√©`);
    deletedCount++;
  } else {
    console.log(`‚ùå ${component}: Toujours pr√©sent`);
  }
});

console.log(`\nüìä R√©sum√© suppression: ${deletedCount}/${complexComponents.length} fichiers supprim√©s\n`);

console.log('üìà R√âSUM√â FINAL');
console.log('================\n');

const isSimpleDashboardReady = fs.existsSync(simpleDashboardPath) && 
                               fs.existsSync(dashboardPath) && 
                               deletedCount === complexComponents.length;

if (isSimpleDashboardReady) {
  console.log('üéâ EXCELLENT! Dashboard simple et moderne pr√™t !\n');
  console.log('‚ú® CARACT√âRISTIQUES DU DASHBOARD SIMPLE:');
  console.log('========================================');
  console.log('‚Ä¢ Design moderne et √©pur√©');
  console.log('‚Ä¢ Utilise les modules existants');
  console.log('‚Ä¢ Interface responsive');
  console.log('‚Ä¢ Statistiques en temps r√©el');
  console.log('‚Ä¢ Actions rapides contextuelles');
  console.log('‚Ä¢ Pas de nouvelles fonctionnalit√©s');
  console.log('‚Ä¢ Connexion directe aux modules existants\n');
  
  console.log('üéØ MODULES UTILIS√âS:');
  console.log('===================');
  console.log('‚Ä¢ Projets (projects)');
  console.log('‚Ä¢ Formations (courses)');
  console.log('‚Ä¢ Emplois (jobs)');
  console.log('‚Ä¢ CRM (crm)');
  console.log('‚Ä¢ Finance (finance)');
  console.log('‚Ä¢ Objectifs (goals)');
  console.log('‚Ä¢ Analytics (analytics)');
  console.log('‚Ä¢ Param√®tres (settings)\n');
  
  console.log('üöÄ PR√äT POUR L\'UTILISATION !');
} else {
  console.log('‚ùå ATTENTION! Le Dashboard simple n√©cessite des corrections.');
}

console.log('\nüß™ Test du Dashboard simple et moderne termin√© !');
